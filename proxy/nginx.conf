worker_processes auto;

events {
    worker_connections 1024;
}

http {
    ######### GENERAL #########
    # maps
    map "$proxy_host:$proxy_port" $proxy {
        ":"       "-";
        default     "$proxy_host:$proxy_port";
    }

    # logs
    log_format customized   '$remote_addr - $remote_user [$time_local] '
                            '$http_host "$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            '$sent_http_x_cache_status $proxy';
    access_log /var/log/nginx/access.log customized;

    # default server
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name "";
        return 301 http://site.nginx/;
    }

    # tls
    ssl_certificate /tls/server.crt;
    ssl_certificate_key /tls/server.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    ######### SITE #########

    # cache
    proxy_cache_path /var/cache/nginx/site levels=1:2 keys_zone=site_cache:500m inactive=60m use_temp_path=off max_size=10m;

    upstream site {
        server site:80;
    }

    # main site server
    server {
        listen 80;
        listen 443 ssl;
        server_name site.nginx;

        proxy_http_version 1.1;
        proxy_set_header Via "proxy";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # site reverse proxy
        location / {
            proxy_pass http://site$request_uri;

            location /static {
                proxy_pass http://site$request_uri;
                # cache
                proxy_cache site_cache;
                proxy_cache_key $proxy_host$request_uri;
                proxy_cache_min_uses 2;
                proxy_cache_valid any 10m;
                proxy_cache_bypass $http_authorization;
                proxy_no_cache $http_authorization;
                add_header X-Cache-Status $upstream_cache_status;
            }
        }
    }


    ######### API #########

    # load balancer
    upstream api {
        server api-blue:8080 weight=2;
        server api-green:8080;
    }

    # main server
    server {
        listen 80;
        listen 443 ssl;
        server_name api.nginx;

        # variables
        set $one_hour_in_seconds 3600;

        proxy_http_version 1.1;
        proxy_set_header Via "proxy";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
            proxy_pass http://api$request_uri;
            add_header Access-Control-Allow-Origin http://site.nginx;
            add_header Cross-Origin-Resource-Policy "cross-origin";

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin http://site.nginx;
                add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type";
                add_header Access-Control-Max-Age $one_hour_in_seconds;
                return 204;
            }
        }
    }

    # alternative blue server
    upstream api-blue {
        server api-blue:8080;
    }

    server {
        listen 80;
        listen 443 ssl;
        server_name blue.api.nginx;

        location / {
            proxy_pass http://api-blue$request_uri;
            add_header Access-Control-Allow-Origin http://site.nginx;
        }
    }

    # alternative green server
    upstream api-green {
        server api-green:8080;
    }

    server {
        listen 80;
        listen 443 ssl;
        server_name green.api.nginx;

        location / {
            proxy_pass http://api-green$request_uri;
            add_header Access-Control-Allow-Origin http://site.nginx;
        }
    }
}